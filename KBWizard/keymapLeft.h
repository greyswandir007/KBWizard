#ifndef KEYMAPCONSTANT
#define KEYMAPCONSTANT
#include "keymapCommon.h"

unsigned char EEMEM storedMap[KEYMAP_COUNT][4][KEYMAP_SIZE] = {
	{{
	//PORTA (Main 1)
	HID_KEYBOARD_SC_EQUAL_AND_PLUS,// = +
	HID_KEYBOARD_SC_CLOSING_BRACKET_AND_CLOSING_BRACE, // ]
	HID_KEYBOARD_SC_NON_US_HASHMARK_AND_TILDE, // `
	HID_KEYBOARD_SC_KEYPAD_ASTERISK, // *
	///////
	HID_KEYBOARD_SC_1_AND_EXCLAMATION, // 1
	HID_KEYBOARD_SC_Q, // Q
	HID_KEYBOARD_SC_A, // A
	HID_KEYBOARD_SC_Z, // Z
	//PORTC // 8 (Main 2)
	HID_KEYBOARD_SC_2_AND_AT, // 2
	HID_KEYBOARD_SC_W, // W
	HID_KEYBOARD_SC_S, // S
	HID_KEYBOARD_SC_X, // X
	///////
	HID_KEYBOARD_SC_3_AND_HASHMARK,
	HID_KEYBOARD_SC_E,
	HID_KEYBOARD_SC_D,
	HID_KEYBOARD_SC_C,
	//PORTE // 16 (Main 3)
	HID_KEYBOARD_SC_4_AND_DOLLAR,
	HID_KEYBOARD_SC_R,
	HID_KEYBOARD_SC_F,
	HID_KEYBOARD_SC_V,
	///////
	HID_KEYBOARD_SC_5_AND_PERCENTAGE,
	HID_KEYBOARD_SC_T,
	HID_KEYBOARD_SC_G,
	HID_KEYBOARD_SC_B,
	//PORTF // 24 (ARK)
        HID_KEYBOARD_SC_SPACE,
	HID_KEYBOARD_SC_LEFT_CONTROL,
	HID_KEYBOARD_SC_LEFT_SHIFT,
        HID_KEYBOARD_SC_LEFT_GUI,
	HID_KEYBOARD_SC_BACKSPACE,
        NONHID_FN_KEY,
        HID_KEYBOARD_SC_ENTER,
        HID_KEYBOARD_SC_ESCAPE,
	//PORTD+B // 32 (Main bottom)
        NONHID_MOUSE_LEFT_BUTTON,
        HID_KEYBOARD_SC_LEFT_ALT,
        HID_KEYBOARD_SC_LEFT_CONTROL,
        HID_KEYBOARD_SC_HOME,
        // External buttons
        0,0,0,0
	},
	{
	//PORTA // 0 (Main 1)
	0,0,0,0, 0,0,0,0,
	//PORTB // 8 (Main 2)
	0,0,0,0, 0,0,0,0,
	//PORTC // 16 (Main 3)
	0,0,0,0, 0,0,0,0,
	//PORTD // 24 (ARK)
	0,0,0,0, 0,0,0,0,
	//PORTE // 32 (Main bottom)
	0,0,0,0,
	//External
	0,0,0,0
	},
	{
	//PORTA // 0 (Main 1)
	HID_KEYBOARD_SC_F12, // F12
	HID_KEYBOARD_SC_PAUSE, // Break
	HID_KEYBOARD_SC_PRINT_SCREEN,
	HID_KEYBOARD_SC_ESCAPE,
	///////
	HID_KEYBOARD_SC_F1,
	HID_KEYBOARD_SC_HOME,
	HID_KEYBOARD_SC_PAGE_UP,
	HID_KEYBOARD_SC_MENU,
	//PORTB // 8 (Main 2)
	HID_KEYBOARD_SC_F2,
	HID_KEYBOARD_SC_HOME,
	HID_KEYBOARD_SC_LEFT_ARROW,
	HID_KEYBOARD_SC_MEDIA_PLAY,
	///////
	HID_KEYBOARD_SC_F3,
	HID_KEYBOARD_SC_UP_ARROW,
	HID_KEYBOARD_SC_DOWN_ARROW,
	HID_KEYBOARD_SC_MEDIA_STOP,
	//PORTC // 16 (Main 3)
	HID_KEYBOARD_SC_F4,
	HID_KEYBOARD_SC_END,
	HID_KEYBOARD_SC_RIGHT_ARROW,
	HID_KEYBOARD_SC_MEDIA_NEXT_TRACK,
	///////
	HID_KEYBOARD_SC_F4,
	HID_KEYBOARD_SC_END,
	HID_KEYBOARD_SC_PAGE_DOWN,
	HID_KEYBOARD_SC_MEDIA_PREVIOUS_TRACK,
	//PORTD	 // 24 (ARK)
	NONHID_CHANGE_LANG,
	NONHID_CHANGE_KEYMAP,
	HID_KEYBOARD_SC_LEFT_SHIFT,
        HID_KEYBOARD_SC_LEFT_GUI,
	HID_KEYBOARD_SC_BACKSPACE,
        NONHID_FN_KEY,
        HID_KEYBOARD_SC_ENTER,
        HID_KEYBOARD_SC_ESCAPE,
	//PORTE // 32 (Main bottom)
	NONHID_MOUSE_RIGHT_BUTTON,
	NONHID_BLOCK_KEYBOARD,
	NONHID_MOUSE_MIDDLE_BUTTON,
	HID_KEYBOARD_SC_HOME,
	//External
	0,0,0,0
	},
	{
	//PORTA // 0
	0,0,0,0,
	0,HID_KEYBOARD_MODIFIER_LEFTCTRL,0,0,
	//PORTB // 8
	0,0,0,0, 0,0,0,0,
	//PORTC // 16
	0,0,0,0,
        0,HID_KEYBOARD_MODIFIER_LEFTCTRL,0,0,
	//PORTD // 24
	0,0,0,0, 0,0,0,0,
	//PORTE // 32
	0,0,0,0, 0,0,0,0
	}}
};

uint32_t keyPressStatistic[KEYMAP_SIZE] EEMEM = {0};

unsigned char EEMEM macrosData[MACROS_MAX_COUNT][3][MACROS_MAX_SIZE] = {0};

#endif //KEYMAPCONSTANT
